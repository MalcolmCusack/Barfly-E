{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport EditScreenInfo from \"../components/EditScreenInfo\";\nimport { Text, View } from \"../components/Themed\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { onCreateOrder } from \"../src/graphql/subscriptions\";\nexport default function TabOneScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      test = _React$useState2[0],\n      updateTest = _React$useState2[1];\n\n  function subscribe() {\n    API.graphql(graphqlOperation(onCreateOrder)).subscribe({\n      next: function next(orderData) {\n        console.log(\"orderData: \", orderData);\n        updateTest(orderData);\n      }\n    });\n  }\n\n  React.useEffect(function () {\n    subscribe();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Tab One\"), React.createElement(Text, null, \"What up\"), React.createElement(View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\"\n  }), React.createElement(EditScreenInfo, {\n    path: \"/screens/TabOneScreen.tsx\"\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/Users/malc/Desktop/barfly-e/screens/TabOneScreen.tsx"],"names":["React","EditScreenInfo","Text","View","API","graphqlOperation","onCreateOrder","TabOneScreen","navigation","useState","test","updateTest","subscribe","graphql","next","orderData","console","log","useEffect","styles","container","title","separator","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginVertical","height","width"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,OAAOC,cAAP;AACA,SAASC,IAAT,EAAeC,IAAf;AAEA,SAAQC,GAAR,EAAaC,gBAAb,QAAoC,aAApC;AACA,SAAQC,aAAR;AAEA,eAAe,SAASC,YAAT,OAAsC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEnD,wBAA2BR,KAAK,CAACS,QAAN,CAAe,IAAf,CAA3B;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,UAAb;;AAEA,WAASC,SAAT,GAAqB;AACnBR,IAAAA,GAAG,CAACS,OAAJ,CAAYR,gBAAgB,CAACC,aAAD,CAA5B,EACEM,SADF,CACY;AACRE,MAAAA,IAAI,EAAE,cAACC,SAAD,EAAe;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;AACAJ,QAAAA,UAAU,CAACI,SAAD,CAAV;AACH;AAJO,KADZ;AAOH;;AAGCf,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AAClBN,IAAAA,SAAS;AAEZ,GAHD,EAGG,EAHH;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,eADF,EAEE,oBAAC,IAAD,kBAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAC;AAA3D,IAHF,EAIE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC;AAArB,IAJF,CADF;AAQD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\nimport {API, graphqlOperation} from 'aws-amplify';\nimport {onCreateOrder} from '../src/graphql/subscriptions';\n\nexport default function TabOneScreen({ navigation }) {\n\n  const [test, updateTest] = React.useState(null)\n\n  function subscribe() {\n    API.graphql(graphqlOperation(onCreateOrder)\n    ).subscribe({\n        next: (orderData) => {\n            console.log(\"orderData: \", orderData)\n            updateTest(orderData)\n        }\n    })\n}\n\n\n  React.useEffect(() => {\n      subscribe()\n      \n  }, [])\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab One</Text>\n      <Text>What up</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabOneScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { Text, View } from \"../../../components/Themed\";\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\nimport { getUser } from \"../../graphql/queries\";\nimport { API } from 'aws-amplify';\n\nvar Order = function Order(_ref) {\n  var order = _ref.order;\n\n  var _useState = useState(JSON.parse(order.items)),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    var gatherUser = function gatherUser() {\n      var data, response;\n      return _regeneratorRuntime.async(function gatherUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              data = API.graphql({\n                query: getUser,\n                variables: {\n                  id: order.userID\n                }\n              });\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(data);\n\n            case 4:\n              response = _context.sent;\n              setUser(response);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    gatherUser();\n  }, []);\n  return React.createElement(View, null, orderItems.map(function (item) {\n    return React.createElement(Card, {\n      key: item.id\n    }, React.createElement(Card.Title, {\n      title: item.name\n    }), React.createElement(Card.Content, null, React.createElement(Paragraph, null, \"For Malcolm Cusack\")), React.createElement(Card.Actions, null, React.createElement(Button, null, \"Start\"), React.createElement(Button, null, \"Complete\")));\n  }));\n};\n\nexport default Order;","map":{"version":3,"sources":["/Users/malc/Desktop/barfly-e/src/components/orderqueue/Order.js"],"names":["React","useState","useEffect","Text","View","Card","Title","Paragraph","Button","getUser","API","Order","order","JSON","parse","items","orderItems","setOrderItems","user","setUser","gatherUser","data","graphql","query","variables","id","userID","response","console","log","map","item","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,IAAf;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,SAArB,EAAgCC,MAAhC,QAA6C,oBAA7C;AACA,SAASC,OAAT;AACA,SAAQC,GAAR,QAAkB,aAAlB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAEzB,kBAAoCX,QAAQ,CAACY,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACG,KAAjB,CAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwBhB,QAAQ,EAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMkB,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,cAAAA,IAFK,GAEEX,GAAG,CAACY,OAAJ,CAAa;AAACC,gBAAAA,KAAK,EAAEd,OAAR;AACtBe,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,EAAE,EAAEb,KAAK,CAACc;AADH;AADW,eAAb,CAFF;AAAA;AAAA,+CAOaL,IAPb;;AAAA;AAOLM,cAAAA,QAPK;AAQXR,cAAAA,OAAO,CAACQ,QAAD,CAAP;AARW;AAAA;;AAAA;AAAA;AAAA;AAWXC,cAAAA,OAAO,CAACC,GAAR;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAeAT,IAAAA,UAAU;AAEb,GAnBQ,EAmBN,EAnBM,CAAT;AAuBA,SAEI,oBAAC,IAAD,QACKJ,UAAU,CAACc,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrB,WACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACN;AAAhB,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEM,IAAI,CAACC;AAAxB,MADJ,EAEI,oBAAC,IAAD,CAAM,OAAN,QACI,oBAAC,SAAD,6BADJ,CAFJ,EAMI,oBAAC,IAAD,CAAM,OAAN,QACI,oBAAC,MAAD,gBADJ,EAEI,oBAAC,MAAD,mBAFJ,CANJ,CADJ;AAcF,GAfA,CADL,CAFJ;AAwBH,CApDD;;AAuDA,eAAerB,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Text, View } from '../../../components/Themed';\nimport {Card, Title, Paragraph, Button} from 'react-native-paper';\nimport { getUser } from '../../graphql/queries';\nimport {API} from 'aws-amplify';\n\n\nconst Order = ({ order }) => {\n\n    const [orderItems, setOrderItems] = useState(JSON.parse(order.items))\n    const [user, setUser] = useState()\n\n    useEffect(() => {\n\n        const gatherUser = async () => {\n            try { \n                const data = API.graphql( {query: getUser, \n                    variables: {\n                        id: order.userID\n                    }\n                })\n                const response =  await data\n                setUser(response)\n    \n            } catch (err) {\n                console.log(err)\n            }\n        }\n\n        gatherUser()\n        \n    }, [])\n\n\n\n    return (\n\n        <View>\n            {orderItems.map(item => {\n               return  (\n                   <Card key={item.id}>\n                       <Card.Title title={item.name} />\n                       <Card.Content>\n                           <Paragraph>For Malcolm Cusack</Paragraph>\n                        \n                       </Card.Content>\n                       <Card.Actions>\n                           <Button>Start</Button>\n                           <Button>Complete</Button>\n                       </Card.Actions>\n\n                   </Card>\n               )\n            })}\n            \n            \n\n        </View>\n    )\n}\n\n\nexport default Order\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { Text, View } from \"../../../components/Themed\";\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\nimport { getUser } from \"../../graphql/queries\";\nimport { API } from 'aws-amplify';\nimport { List, withTheme } from 'react-native-paper';\n\nvar Order = function Order(_ref) {\n  var order = _ref.order;\n\n  var _useState = useState(JSON.parse(order.items)),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      expanded = _useState8[0],\n      setExpanded = _useState8[1];\n\n  useEffect(function () {\n    var gatherUser = function gatherUser() {\n      var data, response;\n      return _regeneratorRuntime.async(function gatherUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log(order);\n              data = API.graphql({\n                query: getUser,\n                variables: {\n                  id: order.userID\n                }\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(data);\n\n            case 5:\n              response = _context.sent;\n              console.log(response);\n              setUser(response.data.getUser);\n              setIsLoading(false);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    gatherUser();\n  }, []);\n\n  var handlePress = function handlePress() {\n    setExpanded(!expanded);\n  };\n\n  var renderOrder = function renderOrder() {\n    React.createElement(List.Section, {\n      title: \"Order Queue\"\n    }, React.createElement(List.Accordion, {\n      title: user.name + \"'s Order\",\n      expanded: expanded,\n      onPress: handlePress\n    }, orderItems.map(function (item) {\n      return React.createElement(List.Item, {\n        key: item.id,\n        title: item.name,\n        theme: {\n          colors: {\n            background: '#ffffff',\n            accent: '#fcba03',\n            primary: '#fcba03'\n          }\n        }\n      });\n    })));\n  };\n\n  return React.createElement(View, null, !isLoading ? React.createElement(List.Section, null, React.createElement(List.Accordion, {\n    title: user.name + \"'s Order\",\n    expanded: expanded,\n    onPress: handlePress\n  }, orderItems.map(function (item) {\n    return React.createElement(List.Item, {\n      key: item.id,\n      title: item.name,\n      description: item.id,\n      left: function left(props) {\n        React.createElement(List.Icon, _extends({}, props, {\n          icon: \"folder\"\n        }));\n      },\n      right: function right(props) {\n        React.createElement(List.Icon, _extends({}, props, {\n          icon: \"folder\"\n        }));\n      }\n    });\n  }))) : null);\n};\n\nexport default Order;","map":{"version":3,"sources":["/Users/malc/Desktop/barfly-e/src/components/orderqueue/Order.js"],"names":["React","useState","useEffect","Text","View","Card","Title","Paragraph","Button","getUser","API","List","withTheme","Order","order","JSON","parse","items","orderItems","setOrderItems","user","setUser","isLoading","setIsLoading","expanded","setExpanded","gatherUser","console","log","data","graphql","query","variables","id","userID","response","handlePress","renderOrder","name","map","item","colors","background","accent","primary","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Text, View } from '../../../components/Themed';\nimport {Card, Title, Paragraph, Button} from 'react-native-paper';\nimport { getUser } from '../../graphql/queries';\nimport {API} from 'aws-amplify';\nimport { List, withTheme } from 'react-native-paper';\n\n\nconst Order = ({ order }) => {\n\n    const [orderItems, setOrderItems] = useState(JSON.parse(order.items))\n    const [user, setUser] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [expanded, setExpanded] = useState(false)\n\n    useEffect(() => {\n\n        const gatherUser = async () => {\n            try { \n                console.log(order)\n                const data = API.graphql( {query: getUser, \n                    variables: {\n                        id: order.userID\n                    }\n                })\n                const response =  await data\n                console.log(response)\n                setUser(response.data.getUser)\n                setIsLoading(false)\n    \n            } catch (err) {\n                console.log(err)\n            }\n        }\n\n        gatherUser()\n\n        \n    }, [])\n\n    const handlePress = () => {\n        setExpanded(!expanded)\n    }\n\n     const renderOrder = () => {\n         <List.Section title=\"Order Queue\">\n             <List.Accordion\n                title={user.name + \"'s Order\"}\n                expanded={expanded}\n                onPress={handlePress}\n            >\n                {orderItems.map(item => {\n                   return <List.Item key={item.id} title={item.name} theme={{colors: {background: '#ffffff', accent: '#fcba03', primary: '#fcba03'} }}/>\n                  \n                })\n                }\n            </List.Accordion>\n         </List.Section>\n     }\n\n\n\n    return (\n\n        <View>\n            {!isLoading ? (\n                <List.Section>\n                <List.Accordion\n                   title={user.name + \"'s Order\"}\n                   expanded={expanded}\n                   onPress={handlePress}\n               >\n                   {orderItems.map(item => {\n                      return <List.Item key={item.id} \n                        title={item.name} \n                        description={item.id} \n                        left={props => {<List.Icon {...props} icon='folder'/>}}\n                        right={props => {<List.Icon {...props} icon='folder'/>}}\n                        >\n                      </List.Item>\n                     \n                   })\n                   }\n               </List.Accordion>\n            </List.Section>\n            )\n            : null}\n\n            \n            \n            \n\n        </View>\n    )\n}\n\n\nexport default Order\n"]},"metadata":{},"sourceType":"module"}
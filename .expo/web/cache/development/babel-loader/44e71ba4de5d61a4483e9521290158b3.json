{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport Amplify from 'aws-amplify';\nimport config from \"./src/aws-exports\";\nAmplify.configure(config);\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, null, React.createElement(Navigation, {\n      colorScheme: colorScheme\n    }), React.createElement(StatusBar, null));\n  }\n}","map":{"version":3,"sources":["/Users/malc/Desktop/barfly-e/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","Amplify","config","configure","App","isLoadingComplete","colorScheme"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP;AAGAD,OAAO,CAACE,SAAR,CAAkBD,MAAlB;AAEA,eAAe,SAASE,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGP,kBAAkB,EAA5C;AACA,MAAMQ,WAAW,GAAGP,cAAc,EAAlC;;AAEA,MAAI,CAACM,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD,QACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEC;AAAzB,MADF,EAEE,oBAAC,SAAD,OAFF,CADF;AAOD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport Amplify from 'aws-amplify';\nimport config from './src/aws-exports'\nimport {ThemeProvider, createTheme} from \"@mui/material\";\n\nAmplify.configure(config)\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n        \n      </SafeAreaProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}